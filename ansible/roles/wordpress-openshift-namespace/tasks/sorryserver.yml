- include_vars: sorryserver-vars.yml
- include_vars: secrets-wwp-test.yml

- name: Sorryserver Image Stream
  openshift:
    state: latest
    apiVersion: v1
    kind: ImageStream
    metadata:
      name: httpd-sorryserver
      namespace: "{{ openshift_namespace }}"
      labels:
        build: httpd-sorryserver
    spec:
      lookupPolicy:
        local: false
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: 'httpd-sorryserver:latest'
          generation: 3
          importPolicy: {}
          name: latest
          referencePolicy:
            type: Source

- name: Sorryserver Build Config
  openshift:
    state: latest
    apiVersion: v1
    kind: BuildConfig
    metadata:
      name: httpd-sorryserver
      namespace: "{{ openshift_namespace }}"
      labels:
        build: httpd-sorryserver
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: 'httpd-sorryserver:latest'
      runPolicy: Serial
      source:
        git:
          uri: "https://github.com/epfl-si/wp-ops"
          ref: "add-sorry-server"
        contextDir: "ansible/roles/wordpress-openshift-namespace/templates/sorry-server"
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'httpd:2.4'
            namespace: openshift
      triggers:
        # the github trigger will work only when github hooks can access the OC instance
        - type: GitHub
          github:
            secret: "{{ sorryserver_webhook_secret }}"
  register: _openshift_image_sorry_server

- name: "Rebuild Sorryserver image now"
  when: _openshift_image_sorry_server is changed
  shell: "oc -n {{ openshift_namespace }} start-build --wait httpd-sorryserver"
  delegate_to: localhost

- name: Sorryserver Deployment Config
  openshift:
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: httpd-sorryserver
      namespace: "{{ openshift_namespace }}"
    spec:
      replicas: 1
      selector:
        deployment-config.name: httpd-sorryserver
      strategy:
        activeDeadlineSeconds: 21600
        resources: { }
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          creationTimestamp: null
          labels:
            deployment-config.name: httpd-sorryserver
        spec:
          containers:
            - image: 'docker-registry.default.svc:5000/wwp-test/httpd-sorryserver:latest'
              imagePullPolicy: Always
              name: httpd-sorryserver
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: { }
        terminationGracePeriodSeconds: 30
      triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - httpd-sorryserver
          from:
            kind: ImageStreamTag
            name: 'httpd-sorryserver:latest'
            namespace: "{{ openshift_namespace }}"

- name: Sorryserver Service
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      name: httpd-sorryserver
      namespace: "{{ openshift_namespace }}"
    spec:
      type: ClusterIP
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deployment-config.name: httpd-sorryserver

- name: Sorryserver Route
  openshift:
    apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: httpd-sorryserver
      namespace: "{{ openshift_namespace }}"
    spec:
      host: sorry-server-wp.epfl.ch
      port:
        targetPort: 8080
      tls:
        termination: edge
      to:
        kind: Service
        name: httpd-sorryserver
        weight: 100
      wildcardPolicy: None
