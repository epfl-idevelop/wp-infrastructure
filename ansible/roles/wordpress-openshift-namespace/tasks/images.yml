# Kubernetes configuration for production-related images and their builds
#
# Builds happen in the wwp-test namespace *only.* The images are then
# promoted using `oc tag` or an equivalent API call.
#
# See also continuous-integration.yml (which has its own set of images)

- include_vars: image-vars.yml
  tags:
    - always

- name: "Testing ImageStreams and their build information"
  when: not openshift_is_production and not is_minishift
  openshift_imagestream:
    name: "{{ item.name }}"
    namespace: "{{ openshift_namespace }}"
    metadata: "{{ item.metadata | default({}) }}"
    from: "{{ item.from | default(None) }}"
    git:
        repository: "{{ wp_ops_git_uri }}"
        path: "{{ item.git_path }}"
  with_items:
    - name: "{{ wp_base_image_name }}"
      git_path: docker/wp-base
    - name: "{{ httpd_image_name }}"
      git_path: docker/httpd
      from: "{{ wp_base_image_name }}"
    - name: "{{ mgmt_image_name }}"
      git_path: docker/mgmt
      from: "{{ wp_base_image_name }}"

- name: "Production ImageStreams"
  when: openshift_is_production
  openshift_imagestream:
    name: "{{ item.name }}"
    namespace: "{{ openshift_namespace }}"
    metadata: "{{ item.metadata | default({}) }}"
  with_items:
    - name: "{{ httpd_image_name }}"
    - name: "{{ mgmt_image_name }}"

#TODO change namespace name
- name: "Minishift mirror ImageStreams"
  when: is_minishift
  openshift:
    state: latest
    content: |
      apiVersion: v1
      kind: ImageStream
      namespace: {{ minishift_namespace }}
      metadata:
        name: {{item.name}}
        namespace: myproject
      spec:
        dockerImageRepository: {{epfl_openshift_registry_repo}}/{{item.name}}
  with_items:
    - name: "{{ httpd_image_name }}"
    - name: "{{ mgmt_image_name }}"


- name: "Resync images"
  shell:
    cmd: |
      set -e -x
      oc import-image {{item.name}}:prod
  with_items:
    - name: "{{ httpd_image_name }}"
    - name: "{{ mgmt_image_name }}"
  tags:
    - never
    - resync
