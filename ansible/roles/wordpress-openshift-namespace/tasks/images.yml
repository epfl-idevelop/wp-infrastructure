# Kubernetes configuration for production-related images and their builds
#
# Builds happen in the wwp-test namespace *only.* The images are then
# promoted using `oc tag` or an equivalent API call.
#
# See also continuous-integration.yml (which has its own set of images)

- include_vars: ../../../vars/image-vars.yml

- include_vars: ../../../vars/secrets-wwp-test.yml
  when: openshift_namespace == 'wwp-test'

- name: "Testing ImageStreams and their build information"
  when: not openshift_is_production
  openshift_imagestream:
    name: "{{ item.name }}"
    namespace: "{{ openshift_namespace }}"
    metadata: "{{ item.metadata | default({}) }}"
    from: "{{ item.from | default(None) }}"
    git:
        repository: "{{ wp_ops_git_uri }}"
        path: "{{ item.git_path }}"
    strategy: "{{ item.strategy | default({}) }}"
  with_items:
    - name: "{{ wp_base_image_name }}"
      git_path: docker/wp-base
      strategy:
        dockerStrategy:
          buildArgs:
            - name: GITHUB_API_USER
              value: "{{ github_api_token.user }}"
            - name: GITHUB_API_TOKEN
              value: "{{ github_api_token.token | eyaml(eyaml_keys) }}"
    - name: "{{ httpd_image_name }}"
      git_path: docker/httpd
      from: "{{ wp_base_image_name }}"
    - name: "{{ mgmt_image_name }}"
      git_path: docker/mgmt
      from: "{{ wp_base_image_name }}"

- name: "Production ImageStreams"
  when: openshift_is_production
  openshift_imagestream:
    name: "{{ item.name }}"
    namespace: "{{ openshift_namespace }}"
    metadata: "{{ item.metadata | default({}) }}"
  with_items:
    - name: "{{ httpd_image_name }}"
    - name: "{{ mgmt_image_name }}"
