---

- include_vars: mgmt-vars.yml
  tags: always
- include_vars: ../../../vars/ssh-keys.yml  # Required by mgmt-vars.yml

  tags: always
  
- include_vars: ../../../vars/persistent-ressources.yml
  tags: always
  
- include_vars: ../../../vars/image-vars.yml              # For mgmt_image_name
- include_vars: "secrets-{{ openshift_namespace }}.yml"


- name: "PersistentVolumeClaim"
  connection: local
  openshift:
    state: latest
    content: |
      kind: PersistentVolumeClaim
      name: "{{openshift_pvc_name}}"
      namespace: "{{openshift_namespace}}"
      apiVersion: v1
      metadata:
        name: '{{openshift_pvc_name}}'
      {% if not openshift_is_minishift %}
        annotations:
          volume.beta.kubernetes.io/storage-class: wwp-int-wordpress-sites       
      {% endif %}
      spec:
        accessModes:
        - ReadWriteMany
      {% if not openshift_is_minishift %}
        resources:
          requests:
            storage: 250Gi
      {% endif %}
      {% if openshift_is_minishift %}
        resources:
          requests:
            storage: 1Gi
        selector:
          matchLabels:
            id: "pv"
      {% endif %}

  tags: pvc




- name: "{{ mgmt_secret_name }} secret (ssh host and user keys)"
  openshift:
    state: latest
    content: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ mgmt_secret_name }}"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{mgmt_app_name}}"
      data:
        {{ mgmt_secret_contents | to_yaml | indent(width=2) }}

- name: jahia2wp-env ConfigMap
  openshift:
    state: latest
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: jahia2wp-env
      namespace: "{{ openshift_namespace }}"
    data:
      WP_ADMIN_USER: admin
      WP_ADMIN_EMAIL: test@example.com
      WP_VERSION: unused

- name: mysql-super-credentials Secret
  openshift:
    state: latest
    apiVersion: v1
    kind: Secret
    metadata:
      name: mysql-super-credentials
      namespace: "{{ openshift_namespace }}"
    type: Opaque
    data:
      MYSQL_DB_HOST: "{{ mysql_super_credentials.host | b64encode }}"
      MYSQL_SUPER_USER: "{{ mysql_super_credentials.user | b64encode }}"
      MYSQL_SUPER_PASSWORD: "{{ mysql_super_credentials.password | eyaml(eyaml_keys) | b64encode }}"

- name: mgmt DeploymentConfig

  openshift:
    state: latest
    content: |
      apiVersion: v1
      kind: DeploymentConfig
      metadata:
        name: "{{mgmt_app_name}}"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{mgmt_app_name}}"
      spec:
        replicas: 1
        selector:
          app: "{{mgmt_app_name}}"
          deploymentconfig: "{{mgmt_app_name}}"
        template:
          metadata:
            labels:
              app: "{{mgmt_app_name}}"
              deploymentconfig: "{{mgmt_app_name}}"
          spec:   
            containers:
              - name: "{{mgmt_app_name}}"
                imagePullPolicy: Always
                ports:
                - containerPort: 22
                  protocol: TCP
      {% if (openshift_is_wp_int or openshift_is_minishift) %}
                env:
                  - name: DB_HOST
                    valueFrom:
                      secretKeyRef:
                        key: host
                        name: database-access
                  - name: DB_USER
                    valueFrom:
                      secretKeyRef:
                        key: username
                        name: database-access
                  - name: DB_PASS
                    valueFrom:
                      secretKeyRef:
                        key: password
                        name: database-access
      {% endif %}
                volumeMounts:
                  - name: srv
                    mountPath: /srv
                  - name: ssh
                    mountPath: /var/lib/secrets/ssh
      {% if (openshift_is_production or openshift_is_wp_int) %}
                  - name: backups
                    mountPath: /backups
      {% endif %}
            serviceAccount: "{{ mgmt_service_account }}"
            serviceAccountName: "{{ mgmt_service_account }}"
            volumes:
              - name: srv
                persistentVolumeClaim:
                  claimName: '{{openshift_pvc_name}}'
              - name: ssh
                secret:
                  secretName: "{{ mgmt_secret_name }}"
      {% if (openshift_is_production or openshift_is_wp_int) %}
              - name: backups
      {% if (openshift_is_wp_int) %}
                persistentVolumeClaim:
                  claimName: "{{ openshift_backup_volume_name }}"
      {% endif %}
                mountPath: /backups
      {% endif %}
              envFrom:
                - configMapRef:
                    name: jahia2wp-env
                - secretRef:
                    name: mysql-super-credentials
            serviceAccount: {{ mgmt_service_account }}
            serviceAccountName: {{ mgmt_service_account }}
            volumes:
            - name: srv
              persistentVolumeClaim:
                claimName: wordpress-0
            - name: ssh
              secret:
                secretName: "{{ mgmt_secret_name }}"
      {% if openshift_is_production %}
            - name: backups
              persistentVolumeClaim:
                claimName: backups-0
      {% endif %}
        triggers:
          - type: ConfigChange
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
              - "{{mgmt_app_name}}"
              from:
                kind: ImageStreamTag
                name: "{{ mgmt_image_name }}:{{ openshift_registry_tag }}"
                namespace: "{{ openshift_namespace }}"
              