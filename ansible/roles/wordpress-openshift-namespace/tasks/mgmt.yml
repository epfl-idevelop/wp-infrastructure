---

- include_vars: mgmt-vars.yml
  tags: always
- include_vars: ../../../vars/ssh-keys.yml  # Required by mgmt-vars.yml
  tags: always
- include_vars: image-vars.yml              # For mgmt_image_name
  tags: always
- include_vars: ../../../vars/persistent-ressources.yml
  tags: always


- name: "PersistentVolumeClaim"
  connection: local
  openshift:
    state: latest
    kind: PersistentVolumeClaim
    name: "{{openshift_pvc_name}}"
    namespace: "{{openshift_namespace}}"
    apiVersion: v1
    metadata:
      name: '{{openshift_pvc_name}}'
      annotations:
        volume.beta.kubernetes.io/storage-class: wwp-int-wordpress-sites
    spec:
      accessModes:
      - ReadWriteMany
      resources:
         requests:
           storage: 250Gi

  tags: pvc

- name: "{{ mgmt_secret_name }} secret (ssh host and user keys)"
  openshift:
    state: latest
    content: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ mgmt_secret_name }}"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{mgmt_app_name}}"
      data:
        {{ mgmt_secret_contents | to_yaml | indent(width=2) }}

- name: DeploymentConfigs
  connection: local
  openshift:
    state: latest
    content: |
      apiVersion: v1
      kind: DeploymentConfig
      metadata:
        name: "{{mgmt_app_name}}"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{mgmt_app_name}}"
      spec:
        replicas: 1
        selector:
          app: "{{mgmt_app_name}}"
          deploymentconfig: "{{mgmt_app_name}}"
        template:
          metadata:
            labels:
              app: "{{mgmt_app_name}}"
              deploymentconfig: "{{mgmt_app_name}}"
          spec:   
            containers:
              - name: "{{mgmt_app_name}}"
                imagePullPolicy: Always
                ports:
                - containerPort: 22
                  protocol: TCP
      {% if openshift_is_wp_int %}
                env:
                  - name: DB_HOST
                    valueFrom:
                      secretKeyRef:
                        key: host
                        name: database-access
                  - name: DB_USER
                    valueFrom:
                      secretKeyRef:
                        key: username
                        name: database-access
                  - name: DB_PASS
                    valueFrom:
                      secretKeyRef:
                        key: password
                        name: database-access
      {% endif %}
                volumeMounts:
                  - name: srv
                    mountPath: /srv
                  - name: ssh
                    mountPath: /var/lib/secrets/ssh
      {% if (openshift_is_production or openshift_is_wp_int) %}
                  - name: backups
                    mountPath: /backups
      {% endif %}
            serviceAccount: "{{ mgmt_service_account }}"
            serviceAccountName: "{{ mgmt_service_account }}"
            volumes:
              - name: srv
                persistentVolumeClaim:
                  claimName: '{{openshift_pvc_name}}'
              - name: ssh
                secret:
                  secretName: "{{ mgmt_secret_name }}"
      {% if (openshift_is_production or openshift_is_wp_int) %}
              - name: backups
                persistentVolumeClaim:
                  claimName: "{{ openshift_backup_volume_name }}"
      {% endif %}
        triggers:
          - type: ConfigChange
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
              - "{{mgmt_app_name}}"
              from:
                kind: ImageStreamTag
                name: "{{ mgmt_image_name }}:{{ openshift_registry_tag }}"
                namespace: "{{ openshift_namespace }}"
              