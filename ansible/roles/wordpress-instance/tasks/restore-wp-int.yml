---

- name: directories
  file:  
    path: "{{wp_dir}}"
    owner: www-data
    state: directory

- name: wp evaluation
  shell:
    cmd: |
      echo $({{wp_cli_command }} eval '1;')
  register: out
  changed_when: false
- debug:
    var: out.stderr

#TODO: seulement extraire /uploads plus tard
- name: unzip backup archive
  shell:
    cmd: |
      cd "{{wp_dir}}"
      tar --transform 's,^.*/wp-content,wp-content,S' -xvf /backups/{{wp_backup_folder}}/{{wp_archive_name}} --wildcards '*/wp-content'
      {{wp_cli_command}} core download
  when: "'This does not seem to be a WordPress install.' in out.stderr"

- name: wp evaluation
  shell:
    cmd: |
      echo $({{wp_cli_command }} eval '1;')
  register: out
  changed_when: false
- debug:
    var: out.stderr

- name: delete stale wp-config file
  shell:
    cmd: |
      rm {{wp_dir}}/wp-config.php
  when: "'Error establishing a database connection' in out.stderr"

- name: Create databases & wp-config files for wordpress instances [IF NEEDED]
  shell:
    cmd: |
       mysql --user=$DB_USER --password=$DB_PASS --host=$DB_HOST -e "CREATE DATABASE IF NOT EXISTS {{ db_name }}"
       {{wp_cli_command }} config create --dbname={{db_name}} --dbuser=$DB_USER --dbpass=$DB_PASS --dbhost=$DB_HOST --extra-php << "PHP"
       define('WP_CONTENT_DIR', '{{wp_dir}}/wp-content');
       if (isset( $_SERVER['HTTP_X_FORWARDED_PROTO'] ) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https'){
         $_SERVER['HTTPS']='on';
       }
       define('ALLOW_UNFILTERED_UPLOADS', true);
       PHP
       mysql --user=$DB_USER --password=$DB_PASS --host=$DB_HOST {{db_name}} < /backups/{{wp_backup_folder}}/{{wp_sql_name}}
       for opt in home siteurl; do {{wp_cli_command}} --allow-root option set $opt https://{{wp_hostname}}; done;
       {{wp_cli_command}} --allow-root transient delete --all
       
  when: "('wp-config.php' in out.stderr and 'not found' in out.stderr) or 'Error establishing a database connection' in out.stderr"

- name: wp core symlink
  shell:
    chdir: "{{wp_dir}}"
    cmd: |
      if test -L wp-load.php; then
        echo >&2 "ALREADYSYMLINKED"
        exit 0
      fi
      wp core symlink
  register: wp_core_symlink
  changed_when: '"ALREADYSYMLINKED" not in wp_core_symlink.stderr'

- name: wp symlink
  file:
    state: link
    src: /wp/4
    dest: "{{wp_dir}}/wp"

- name: extract .htaccess
  shell:
    creates: "{{wp_htaccess_path}}"
    chdir: "{{wp_dir}}"
    cmd: |
      tar -xvf /backups/{{wp_backup_folder}}/{{wp_archive_name}} --wildcards --to-stdout '*/.htaccess' > .htaccess


- name: wp evaluation
  shell:
    cmd: |
      {{wp_cli_command }} eval '1;'
  register: out
  changed_when: false
- debug:
    var: out.stderr

