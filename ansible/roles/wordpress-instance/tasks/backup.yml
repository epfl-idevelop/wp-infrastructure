- include_vars: wp-destructive.yml

- name: Create directory to revert backup in case of trouble
  command: mktemp -d -p {{ wp_dir }} -t ansible-backup-XXXXXX
  changed_when: false
  register: _backup_tmpdir_cmd
  tags: always
  ignore_errors: "{{ wp_ignore_backup_errors | default(false) }}"

- set_fact:
    _backup_tmpdir: "{{ _backup_tmpdir_cmd.stdout }}"
  tags: always

- name: Backup directory protection
  shell: |
    set -e -x

    mkdir -p "{{ _backup_tmpdir }}"/wp
    cat <<HTACCESS > "{{ _backup_tmpdir }}"/.htaccess
    Require all denied
    HTACCESS
  tags: always

- name: Back up code to {{ _backup_tmpdir }} â€” ðŸ’¡ In case of a catastrophe, you will find your files there.
  shell: |
    set -e -x

    (cd "{{ wp_dir }}"; tar --exclude wp-content/uploads --exclude .htaccess \
         --exclude "ansible-backup-*" -clf - .) | \
      (cd "{{ _backup_tmpdir }}"; tar xpvf -)
    cp "{{ wp_dir }}/.htaccess" "{{ _backup_tmpdir }}/htaccess" || true
  tags:
    - wipe
    - backup
    - backup.code
  ignore_errors: "{{ wp_ignore_backup_errors | default(false) }}"

- name: Back up data to {{ _backup_tmpdir }} â€” ðŸ’¡ In case of a catastrophe, you will find your files there.
  command: "{{ wp_cli_command }} db export {{ _backup_tmpdir }}/backup.sql"
  tags:
    - wipe
    - backup
    - backup.data
  ignore_errors: "{{ wp_ignore_backup_errors | default(false) }}"

- name: Back up uploads to {{ _backup_tmpdir }} â€” ðŸ’¡ In case of a catastrophe, you will find your files there.
  shell: |
    set -e -x
    cd "{{ wp_dir }}"
    mkdir -p "{{ _backup_tmpdir }}"/wp-content || true
    cp -a wp-content/uploads {{ _backup_tmpdir }}/wp-content
  tags:
    - wipe
    - backup
    - backup.uploads
  ignore_errors: "{{ wp_ignore_backup_errors | default(false) }}"
