# Backup a WordPress instance to EPFL's Scality system through its S3-like API

- assert:
    that: >-
      ansible_verbosity <= 2
    msg: >-
      Don't use -vvv or higher when backing up or restoring sites (risk
      of disclosure of the Scality access credentials)

- include_vars: "{{ item }}"
  with_items:
    - backup-vars.yml
    - ../../../vars/env-secrets.yml                          # Used in backup-vars.yml
    - "../../../vars/secrets-{{ openshift_namespace }}.yml"  # Used in env-secrets.yml

- name: restic init
  environment: "{{ backup_restic_environment }}"    # `-vv`-safe!
  shell:
    cmd: |
      restic -r {{ item }} init
  register: _restic_init
  changed_when: >-
    "created restic repository" in _restic_init.stdout
  failed_when: >-
    not (
      (_restic_init.rc == 0)
      or
      ("already initialized" in _restic_init.stderr)
    )
  ignore_errors: "{{ wp_ignore_backup_errors | default(false) }}"
  with_items:
    - "{{ backup_restic_repo_files }}"
    - "{{ backup_restic_repo_sql }}"

- name: Back up files
  environment: "{{ backup_restic_environment }}"
  shell:
    cmd: |
      cd {{ wp_dir }}
      restic -r {{ backup_restic_repo_files }} backup .
  ignore_errors: "{{ wp_ignore_backup_errors | default(false) }}"

- name: Back up MySQL database
  environment: "{{ backup_restic_environment }}"
  shell:
    cmd: |
      {{ wp_cli_command }} db export - | \
        restic -r {{ backup_restic_repo_sql }} backup --stdin --stdin-filename db-backup.sql
  ignore_errors: "{{ wp_ignore_backup_errors | default(false) }}"
