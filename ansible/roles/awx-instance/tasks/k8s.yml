# Kubernetes (OpenShift) objects required to run AWX

- include_vars: k8s-vars.yml
- include_vars: "secrets-{{ ansible_oc_namespace }}.yml"

- name: Ansible Tower HTTP service
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      name: awx-web-svc
      namespace: "{{ ansible_oc_namespace }}"
      labels:
        app: awx
        name: awx-web-svc
    spec:
      externalTrafficPolicy: Cluster
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: 8052
      selector:
        name: awx-web-deploy
      sessionAffinity: None
      type: NodePort

- name: ConfigMap for AWX and sidekicks
  openshift:
    state: latest
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: awx-config
      namespace: "{{ ansible_oc_namespace }}"
    data:
      awx_settings: "{{ lookup('template', 'awx-settings.py') }}"
      nginx_conf: "{{ lookup('template', 'nginx.conf') }}"
      redis_conf: "{{ lookup('template', 'redis.conf') }}"
  notify: Restart AWX pod

- name: Ansible Tower secret (awx-secrets)
  openshift:
    state: latest
    apiVersion: v1
    kind: Secret
    metadata:
      name: awx-secrets
      namespace: "{{ ansible_oc_namespace }}"
    type: Opaque
    data:
      admin_password: "{{ awx_admin_password | eyaml(eyaml_keys)  | b64encode }}"
      credentials_py: "{{ lookup('template', 'credentials.py.j2') | b64encode }}"
      django_secret_key: "{{ django_secret_key | eyaml(eyaml_keys) | b64encode }}"
      pg_password: "{{ awx_postgresql_database['password'] | eyaml(eyaml_keys)  | b64encode }}"
  notify: Restart AWX pod

- name: awx service account
  openshift:
    state: latest
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: "{{ awx_service_account }}"
      namespace: "{{ ansible_oc_namespace }}"

- name: Ansible Tower StatefulSet
  openshift:
    state: latest
    apiVersion: apps/v1
    kind: StatefulSet   # Makes it easier to predict the pod name
    metadata:
      name: awx
      namespace: "{{ ansible_oc_namespace }}"
    spec:
      selector:
        matchLabels:
          app: awx
          name: awx-web-deploy
      serviceName: awx
      template:
        metadata:
          labels:
            app: awx
            name: awx-web-deploy
        spec:
          containers:
          #####################################################
          - name: awx-web
            image: "docker-registry.default.svc:5000/{{ ansible_oc_namespace }}/{{ awx_web_image_name }}:{{ awx_version }}"
            ports:
            - containerPort: 8052
              protocol: TCP
            resources:
              requests:
                cpu: 250m
                memory: 1Gi
            volumeMounts:
            - name: awx-application-config
              mountPath: /etc/tower
              readOnly: true
            - name: awx-application-credentials
              mountPath: /etc/tower/conf.d/
              readOnly: true
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf   # Just this file, Vasili
                                    # (nginx gets anxious if it is missing a
                                    # /etc/nginx/mime.types)
              readOnly: true
            - name: awx-redis-socket
              mountPath: "/var/run/redis"
            - name: awx-memcached-socket
              mountPath: "/var/run/memcached"
          #####################################################
          - name: awx-task
            image: docker-registry.default.svc:5000/{{ ansible_oc_namespace }}/{{ awx_task_image_name }}:{{ awx_version }}
            command:
            - /usr/bin/launch_awx_task.sh
            resources:
              requests:
                cpu: 250m
                memory: 2Gi
            volumeMounts:
            - name: awx-application-config
              mountPath: /etc/tower
              readOnly: true
            - name: awx-application-credentials
              mountPath: /etc/tower/conf.d/
              readOnly: true
            - name: awx-redis-socket
              mountPath: "/var/run/redis"
            - name: awx-memcached-socket
              mountPath: "/var/run/memcached"
            - name: wp-nfs
              mountPath: "/srv"
              readOnly: true
            env:
              - name: MY_POD_UID
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.uid
              - name: MY_POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
          #####################################################
          - name: awx-redis
            image: redis:latest
            imagePullPolicy: Always
            args: ["redis-server", "/etc/redis/redis.conf"]
            ports:
              - name: redis
                protocol: TCP
                containerPort: 6379
            volumeMounts:
              - name: awx-redis-config
                mountPath: "/etc/redis"
                readOnly: true
              - name: awx-redis-socket
                mountPath: "/var/run/redis"
          #####################################################
          - name: awx-memcached
            image: memcached:latest
            imagePullPolicy: Always
            resources:
              requests:
                cpu: 250m
                memory: 1Gi
            command:
              - 'memcached'
              - '-s'
              - '/var/run/memcached/memcached.sock'
              - '-a'
              - '0666'
            volumeMounts:
              - name: awx-memcached-socket
                mountPath: "/var/run/memcached"
          #####################################################


          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccount: "{{ awx_service_account }}"
          serviceAccountName: "{{ awx_service_account }}"
          terminationGracePeriodSeconds: 10
          volumes:
          - name: wp-nfs
            persistentVolumeClaim:
              claimName: wordpress-0
          - name: awx-application-config
            configMap:
              name: awx-config
              defaultMode: 0644
              items:
              - key: awx_settings
                path: settings.py
          - name: awx-redis-config
            configMap:
              name: awx-config
              defaultMode: 0644
              items:
              - key: redis_conf
                path: redis.conf
          - name: awx-application-credentials
            secret:
              defaultMode: 0644
              items:
              - key: credentials_py
                path: credentials.py
              - key: django_secret_key
                path: django_secret_key
              secretName: awx-secrets
          - name: nginx-config
            configMap:
              name: awx-config
              items:
                - key: nginx_conf
                  path: nginx.conf
          - name: awx-redis-socket
            emptyDir: {}
          - name: awx-memcached-socket
            emptyDir: {}
  notify: Restart AWX pod

- meta: flush_handlers

- name: Ansible Tower route for the Web front-end
  openshift:
    state: latest
    apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: awx-web-svc
      namespace: "{{ ansible_oc_namespace }}"
    spec:
      host: "{{ awx_web_hostnames[ansible_oc_namespace] }}"
      port:
        targetPort: http
      tls:
        termination: edge
      to:
        kind: Service
        name: awx-web-svc
