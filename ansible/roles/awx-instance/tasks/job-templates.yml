# Set up job templates available to AWX.

- name: "Preconfigure templates job"
  awx_script:
    supports_check_mode: yes
    script: |
      # Remove the Demo job template if found
      from awx.main.models.jobs import JobTemplate
      try:
          jt = JobTemplate.objects.get(name="Demo Job Template")
          jt.delete()
          update_json_status(changed=True)
      except JobTemplate.DoesNotExist:
          update_json_status(changed=False)

- name: "Set up templates job for theme selection"
  awx_script:
    supports_check_mode: yes
    script: |
      {{ lookup("template", "job-templates-create.py") }}

      kwarg = dict(
          job_name = "Set up theme to sites",
          job_description = "Apply the theme defined in the inventory to sites",
          job_tags = "themes",
          job_type = "run",
          job_schedule_name = "Set up the theme on WP sites every thursday",
          job_schedule_rrule = "DTSTART:20220305T120829Z RRULE:FREQ=WEEKLY;BYDAY=TH",
      )

      update_json_status(changed=get_or_create_job_template(**kwarg))

- name: "Set up templates job for aligning sites"
  awx_script:
    supports_check_mode: yes
    script: |
      {{ lookup("template", "job-templates-create.py") }}

      kwarg = dict(
          job_name = "Align sites",
          job_description = "Revert any changes manualy applied to sites that were not included as a standard",
          job_tags = "config,plugins,symlink",
          job_type = "run",
          job_schedule_name = "Align sites during Wagon's day",
          job_schedule_rrule = "DTSTART:20220305T120829Z RRULE:FREQ=WEEKLY;BYDAY=TH",
      )

      update_json_status(changed=get_or_create_job_template(**kwarg))

- name: "Set up job template for backups"
  awx_script:
    supports_check_mode: yes
    script: |
      {{ lookup("template", "awx_script_lib.py") }}

      from awx.main.models.jobs import JobTemplate
      from awx.main.models.inventory import Inventory
      from awx.main.models.projects import Project
      from awx.main.models.ha import InstanceGroup
      from awx.main.models.schedules import Schedule

      with AnsibleGetOrCreate(JobTemplate, name="Backup") as jt:
          jt.description = "Backup"
          jt.job_type = "run"
          jt.inventory = Inventory.objects.get(name="{{ awx_inventory_name }}")
          jt.project = Project.objects.get(name="{{ awx_project_name }}")
          jt.playbook = "ansible/playbooks/backup.yml"
          jt.instance_groups.set([InstanceGroup.objects.get(name="{{ awx_elastic_container_group_name }}")])
          # FIXME: remove limit
          jt.limit = "prod_subdomains_lite"

          with AnsibleGetOrCreate(Schedule, name="Backup nightly") as s:
                s.unified_job_template = jt
                s.rrule = "DTSTART;TZID=Europe/Berlin:20201003T030303 RRULE:FREQ=DAILY;INTERVAL=1"

  tags: awx.bt