# Set up inventories available to AWX.

- name: "Set up `{{ awx_wpveritas_inventory_script_name }}` custom inventory script"
  tags: awx.inventory
  awx_script:
    script: |
      {{ lookup("template", "awx_script_lib.py") }}

      from awx.main.models.inventory import CustomInventoryScript, InventorySource
      from awx.main.models.organization import Organization

      with AnsibleGetOrCreate(Organization, name="{{ awx_organization_name }}") as org:
          with AnsibleGetOrCreate(CustomInventoryScript,
                                  name="{{ awx_wpveritas_inventory_script_name }}"
                                  ) as script:
              script.script = script_text
              script.organization = org
              with AnsibleGetOrCreate(InventorySource,
                                      name="{{ awx_wpveritas_inventory_source_name }}"
                                     ) as src:
                  src.source_script = script
    supports_check_mode: yes
    vars:
      script_text: '{{ lookup("file", awx_wpveritas_inventory_script_path) }}'

- name: "Set up {{ awx_wpveritas_inventory_name }} inventory"
  tags: awx.inventory
  awx_script:
    supports_check_mode: yes
    script: |
      {{ lookup("template", "awx_script_lib.py") }}

      from awx.main.models.organization import Organization
      from awx.main.models.inventory import Inventory, InventorySource
      from awx.main.models.ha import InstanceGroup

      org = Organization.objects.get(name="{{ awx_organization_name }}")
      inv_source = InventorySource.objects.get(name="{{ awx_wpveritas_inventory_source_name }}")
      instance_group = InstanceGroup.objects.get(name="{{ awx_elastic_container_group_name }}")

      with AnsibleGetOrCreate(Inventory, name="{{ awx_wpveritas_inventory_name }}") as inv:
        inv.organization = org
        inv.inventory_sources.set([inv_source])
        inv.instance_groups.set([instance_group])
